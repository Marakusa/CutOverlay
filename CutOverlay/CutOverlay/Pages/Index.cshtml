@page
@using CutOverlay.Models
@model CutOverlay.Pages.IndexModel
@{
}

<link rel="stylesheet" href="css/settings.css">

<script src="~/js/settings.js"></script>

<div id="settingsPanel" class="draggableWindow" style="height: 664px; left: 010px; top: 93px; width: 553px;">
    <div id="settingsPanelHeader" class="draggableWindowHeader">
        <span>Options</span>
        <span class="closeWindowButton" onclick="showWindow('settingsPanel', false)"></span>
    </div>
    <div id="settingsPanelContent" class="draggableWindowContent">
        <div class="settingsSection">
            

            @await Html.PartialAsync("_Header", new TextModel
                   {
                       Text = "Twitch Chat Integration"
                   })
            @await Html.PartialAsync("_Checkbox", new InputModel
                   {
                       Label = "Use Twitch Chat",
                       Id = "twitchChat",
                       Value = "false"
                   })
            @await Html.PartialAsync("_TextField", new InputModel
                   {
                       Label = "Twitch Username",
                       Id = "twitchUsername",
                       Value = "marakusa"
                   })

            <hr/>


            @await Html.PartialAsync("_Header", new TextModel
                   {
                       Text = "Spotify"
                   })
            @await Html.PartialAsync("_Text", new TextModel
                   {
                       Text = "This client information can be found in the Spotify Developer Dashboard under your apps settings."
                   })
            @await Html.PartialAsync("_TextField", new InputModel
                   {
                       Label = "Spotify Client ID",
                       Id = "spotifyClientId",
                       Value = ""
                   })
            @await Html.PartialAsync("_SecretField", new InputModel
                   {
                       Label = "Spotify Client Secret",
                       Id = "spotifyClientSecret",
                       Value = ""
                   })

            @await Html.PartialAsync("_Text", new TextModel
                   {
                       Text = "CUT Overlay requires a Spotify app for it to function properly (not the Spotify client). A new app has to be created in the Spotify Developer Dashboard, open the dashboard by clicking the button below. You may need to log in to Spotify."
                   })
            @await Html.PartialAsync("_Text", new TextModel
                   {
                       Text = "Add the following URI to the \"Redirect URI\":"
                   })
            @await Html.PartialAsync("_CopyTextField", new InputModel
                   {
                       Id = "spotifyCallbackCopy",
                       Value = $"http://localhost:{Globals.Port}/spotify/callback",
                       Label = "Click below to copy!"
                   })
            @await Html.PartialAsync("_Button", new InputModel
                   {
                       Id = "spotifyDashboard",
                       Value = "Open Spotify Dashboard",
                       OnClick = "spotifyDashboard()"
                   })

            <hr/>


            @await Html.PartialAsync("_Header", new TextModel
                   {
                       Text = "Pulsoid"
                   })
            @await Html.PartialAsync("_SecretField", new InputModel
                   {
                       Label = "Pulsoid Access Token",
                       Id = "pulsoidAccessToken",
                       Value = ""
                   })
            @await Html.PartialAsync("_Button", new InputModel
                   {
                       Id = "pulsoidDashboard",
                       Value = "Open Pulsoid Dashboard",
                       OnClick = "pulsoidDashboard()"
                   })
        </div>
    </div>
    <div id="settingsBottomBar" class="draggableWindowFooter">
        @await Html.PartialAsync("_Button", new InputModel
               {
                   Id = "saveSettings",
                   Value = "Save",
                   OnClick = "saveConfig()"
               })
        <span id="saveStatus" class="saveStatus"></span>
    </div>
</div>

<div id="overlaysPanel" class="draggableWindow" style="height: 420px; left: 571px; top: 93px; width: 340px;">
    <div id="overlaysPanelHeader" class="draggableWindowHeader">
        <span>Overlays</span>
        <span class="closeWindowButton" onclick="showWindow('overlaysPanel', false)"></span>
    </div>
    <div id="overlaysPanelContent" class="draggableWindowContent" style="padding: 0;">
        <div class="overlayDiv">
            @await Html.PartialAsync("_CopyTextField", new InputModel
                   {
                       Id = "overlay1Copy",
                       Value = $"http://localhost:{Globals.Port}/OverlayStarting",
                       Label = "Starting soon"
                   })
        </div>
        <div class="overlayDiv">
            @await Html.PartialAsync("_CopyTextField", new InputModel
                   {
                       Id = "overlay2Copy",
                       Value = $"http://localhost:{Globals.Port}/OverlayChat",
                       Label = "Chat"
                   })
        </div>
        <div class="overlayDiv">
            @await Html.PartialAsync("_CopyTextField", new InputModel
                   {
                       Id = "overlay3Copy",
                       Value = $"http://localhost:{Globals.Port}/OverlayBrb",
                       Label = "BRB"
                   })
        </div>
        <div class="overlayDiv">
            @await Html.PartialAsync("_CopyTextField", new InputModel
                   {
                       Id = "overlay4Copy",
                       Value = $"http://localhost:{Globals.Port}/OverlayGame1",
                       Label = "Game 1"
                   })
        </div>
        <div class="overlayDiv">
            @await Html.PartialAsync("_CopyTextField", new InputModel
                   {
                       Id = "overlay5Copy",
                       Value = $"http://localhost:{Globals.Port}/OverlayGame2",
                       Label = "Game 2"
                   })
        </div>
    </div>
</div>

<div id="toolbox" class="draggableWindow" style="height: 73px; left: 10px; min-height: 75px; top: 10px; width: 298px;">
    <div id="toolboxHeader" class="draggableWindowHeader">
        <span>Toolbox</span>
    </div>
    <div id="toolboxContent" class="draggableWindowContent" style="display: flex; flex-direction: row; padding: 5px;">
        @await Html.PartialAsync("_ToolboxButton", new InputModel
               {
                   Id = "toolboxSave",
                   Value = "floppy-disk-solid.svg",
                   OnClick = "saveConfig()"
               })
        @await Html.PartialAsync("_ToolboxButton", new InputModel
               {
                   Id = "toolboxOptions",
                   Value = "wrench-solid.svg",
                   OnClick = "showWindow('settingsPanel', true)"
               })
        @await Html.PartialAsync("_ToolboxButton", new InputModel
               {
                   Id = "toolboxOverlays",
                   Value = "display-solid.svg",
                   OnClick = "showWindow('overlaysPanel', true)"
               })
        @await Html.PartialAsync("_ToolboxButton", new InputModel
               {
                   Id = "toolboxInfo",
                   Value = "circle-info-solid.svg",
                   OnClick = "showWindow('infoPanel', true)"
               })
    </div>
</div>


<div id="infoPanel" class="draggableWindow" style="height: 350px; left: 100px; top: 100px; width: 560px;">
    <div id="infoPanelHeader" class="draggableWindowHeader">
        <span>About CUT Overlay</span>
        <span class="closeWindowButton" onclick="showWindow('infoPanel', false)"></span>
    </div>
    <div id="infoPanelContent" class="draggableWindowContent">
        @await Html.PartialAsync("_Header", new TextModel
               {
                   Text = "CUT Overlay"
               })
        @await Html.PartialAsync("_Text", new TextModel
               {
                   Text = "Thank you for using CUT Overlay!"
               })
        @await Html.PartialAsync("_Text", new TextModel
               {
                   Text = "Please configure the overlay using the 'Options' window."
               })
        @await Html.PartialAsync("_Text", new TextModel
               {
                   Text = "The 'Overlays' window lists all of the overlays and their URL links. The links should be put inside web browser sources on OBS in order to be used."
               })
        <hr/>
        @await Html.PartialAsync("_Text", new TextModel
               {
                   Text = Model.CopyrightString
               })
        @await Html.PartialAsync("_Text", new TextModel
               {
                   Text = $"v{Model.Version}"
               })
        @await Html.PartialAsync("_Text", new TextModel
               {
                   Text = Model.LicenseInformation
               })
    </div>
    <div id="infoPanelBottomBar" class="draggableWindowFooter">
        @await Html.PartialAsync("_Button", new InputModel
               {
                   Id = "closeInfo",
                   Value = "Close",
                   OnClick = "showWindow('infoPanel', false)"
               })
    </div>
</div>

<script src="~/js/settingsWindowDrag.js"></script>